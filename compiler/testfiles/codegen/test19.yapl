/* CodeGen test input - recursive procedures (quicksort), with array parameters.
 */
Program test19

Procedure void printArray(int[] a)
Declare
    int i;
Begin
    i := 0;
    While i < #a Do
        writeint(a[i]);
        Write " ";
        i := i + 1;
    EndWhile;
    writeln();
End printArray;

Procedure int[] createArray(int n)
Declare
    int i, j, k;
    int[] a;
Begin
    a := new int[n];
    i := 0; j := 20; k := -1;
    While i < #a Do
        a[i] := i + j;
        i := i + 1;
        j := ((j + 30) % 64) * k;
        k := -k;
    EndWhile;
    Return a;
End createArray;

Procedure void quicksort(int[] a, int left, int right)
Declare
    int i, j, x, w, middle;
Begin
    /* partitioning */
    i := left; j := right;
    middle := (left + right) / 2;
    x := a[middle]; /* pivot element */
    While i <= j Do
        While a[i] < x Do i := i+1; EndWhile;
        While a[j] > x Do j := j-1; EndWhile;
        If i <= j Then
            /* swap a[i] and a[j] */
            w := a[i]; a[i] := a[j]; a[j] := w;
            i := i+1; j := j-1;
        EndIf;
    EndWhile;
    /* recursion */
    If left < j Then quicksort(a, left, j); EndIf;
    If i < right Then quicksort(a, i, right); EndIf;
End quicksort;

Declare
    Const ARRAYLEN = 10;
    int[] a;
Begin
    Write "--- Start test19 ---";
    writeln();

    a := createArray(ARRAYLEN);
    Write "Input Array: ";
    printArray(a);
    quicksort(a, 0, #a-1);
    Write "Sorted Array: ";
    printArray(a);

    Write "--- End test19 ---";
    writeln();
End test19.
